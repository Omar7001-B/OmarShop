@model OmarShop.Models.Product

@{
    ViewData["Title"] = Model.Name;
}

<div class="container mt-4">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Model.Name</li>
        </ol>
    </nav>

    <div class="card shadow">
        <div class="card-body">
            <div class="row">
                <!-- Product Image -->
                <div class="col-md-5 mb-4">
                    <img src="@(string.IsNullOrEmpty(Model.ImageUrl) ? "/images/no-image.jpg" : Model.ImageUrl)" 
                         alt="@Model.Name" 
                         class="img-fluid rounded" 
                         style="max-height: 400px; width: 100%; object-fit: cover;">
                </div>
                
                <!-- Product Details -->
                <div class="col-md-7">
                    <h1 class="mb-3">@Model.Name</h1>
                    
                    <div class="mb-3">
                        <h4 class="text-primary">@Model.Price.ToString("C")</h4>
                    </div>
                    
                    <div class="mb-3">
                        <p class="mb-1"><strong>Availability:</strong></p>
                        @if (Model.StockQuantity > 10)
                        {
                            <span class="badge bg-success">In Stock (@Model.StockQuantity available)</span>
                        }
                        else if (Model.StockQuantity > 0)
                        {
                            <span class="badge bg-warning">Low Stock (@Model.StockQuantity left)</span>
                        }
                        else
                        {
                            <span class="badge bg-danger">Out of Stock</span>
                        }
                    </div>
                    
                    <div class="mb-4">
                        <h5>Description</h5>
                        <p>@(string.IsNullOrEmpty(Model.Description) ? "No description available." : Model.Description)</p>
                    </div>
                    
                    @if (Model.StockQuantity > 0)
                    {
                        <div class="d-grid gap-2 d-md-flex">
                            <div class="input-group me-3" style="width: 130px;">
                                <span class="input-group-text">Qty</span>
                                <input type="number" id="quantity" class="form-control" value="1" min="1" max="@Model.StockQuantity">
                            </div>
                            <button type="button" class="btn btn-primary add-to-cart" data-id="@Model.Id">
                                <i class="fas fa-shopping-cart me-1"></i> Add to Cart
                            </button>
                        </div>
                    }
                    else
                    {
                        <button type="button" class="btn btn-secondary" disabled>
                            <i class="fas fa-shopping-cart me-1"></i> Out of Stock
                        </button>
                    }
                    
                    <div class="mt-4">
                        <a asp-action="Index" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left me-1"></i> Back to Products
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('.add-to-cart').click(function(e) {
                e.preventDefault();
                var productId = $(this).data('id');
                var quantity = parseInt($('#quantity').val());
                
                if (quantity <= 0) {
                    alert('Please select a valid quantity.');
                    return;
                }
                
                $.ajax({
                    url: '@Url.Action("AddToCart", "Cart")',
                    type: 'POST',
                    data: { productId: productId, quantity: quantity },
                    success: function(response) {
                        // Update the cart count
                        updateCartCount();
                        
                        // Show success message
                        var alertHtml = '<div class="alert alert-success alert-dismissible fade show" role="alert">' +
                            'Product added to cart successfully! <a href="@Url.Action("Index", "Cart")">View Cart</a>' +
                            '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>' +
                            '</div>';
                        
                        // Insert alert at the top of the container
                        $('.container').prepend(alertHtml);
                        
                        // Auto-close alert after 5 seconds
                        window.setTimeout(function() {
                            $(".alert").fadeTo(500, 0).slideUp(500, function() {
                                $(this).remove();
                            });
                        }, 5000);
                    },
                    error: function() {
                        alert('Error adding to cart. Please try again.');
                    }
                });
            });
        });
    </script>
} 